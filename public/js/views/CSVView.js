// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.CSVView = (function(_super) {
    __extends(CSVView, _super);

    function CSVView() {
      return CSVView.__super__.constructor.apply(this, arguments);
    }

    CSVView.prototype.tagName = 'div';

    CSVView.prototype.template = _.template($('#csvPage').html());

    CSVView.prototype.events = {
      'click button#downloadCSV': 'downloadCSV',
      'click button#add': 'add',
      'click button#delete': 'delete',
      'click button#saveFields': 'saveFields',
      'click button#replace': 'replace',
      'click button#cancel': 'cancel'
    };

    CSVView.prototype.initialize = function() {
      return this.render();
    };

    CSVView.prototype.render = function() {
      console.log('rendering CSVView');
      this.$el.html(this.template());
      window.onbeforeunload = function() {
        return "WARNING: Reloading the page will restart the process and you will lose all of your data!";
      };
      return this;
    };


    /*
    These functions are found in funtions.html
     */

    CSVView.prototype.downloadCSV = function() {
      return exportToCSV();
    };

    CSVView.prototype.add = function() {
      add();
      $("#titleV").show();
      return $("#docTut").show();
    };

    CSVView.prototype["delete"] = function() {
      del();
      if (documentsAdded > 0) {
        return $("#docTut").show();
      }
    };

    CSVView.prototype.saveFields = function() {
      saveFieldNames();
      $("#fieldTut").hide();
      return $("#textTut").show();
    };

    CSVView.prototype.cancel = function() {
      cancelReplace();
      $("#textTut").show();
      return $("#docTut").show();
    };

    CSVView.prototype.replace = function() {
      replace();
      return $("#docTut").show();
    };

    return CSVView;

  })(Backbone.View);

}).call(this);

//# sourceMappingURL=CSVView.map
